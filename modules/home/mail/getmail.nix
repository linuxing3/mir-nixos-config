{
  config,
  lib,
  ...
}: let
  accounts =
    lib.filter (a: a.getmail.enable)
    (lib.attrValues config.accounts.email.accounts);

  renderAccountConfig = account: let
    inherit (account) getmail imap passwordCommand;
    passCmd = lib.concatMapStringsSep ", " (x: "'${x}'") passwordCommand;
    renderedMailboxes =
      lib.concatMapStrings (x: "'${x}', ") getmail.mailboxes;
    retrieverType = "SimplePOP3SSLRetriever";
    destination = {
      destinationType = "Maildir";
      destinationPath = "${account.maildir.absPath}/";
    };
    renderGetmailBoolean = v:
      if v
      then "true"
      else "false";
  in ''
    # Generated by Home-Manager.
    [retriever]
    type = ${retrieverType}
    server = ${imap.host}
    port = 993
    username = ${account.userName}
    password_command = (${passCmd})
    mailboxes = ( ${renderedMailboxes} )

    [destination]
    type = ${destination.destinationType}
    path = ${destination.destinationPath}

    [options]
    delete = ${renderGetmailBoolean getmail.delete}
    read_all = ${renderGetmailBoolean getmail.readAll}
  '';
  renderConfigFilepath = a: ".getmail/getmail${
    if a.primary
    then "rc"
    else a.name
  }";
in {
  accounts.email = {
    accounts = {
      mfa = {
        primary = false;
        address = "xing_wenju@mfa.gov.cn";
        userName = "xing_wenju@mfa.gov.cn";
        realName = "Xing Wenju";
        passwordCommand = "cat /home/linuxing3/mfa_mail_pass.txt";
        smtp.host = "mail.mfa.gov.cn";
        smtp.tls.useStartTls = true;
        notmuch.enable = true;
        neomutt = {
          enable = true;
          extraConfig = ''
            color status cyan default
          '';
        };
        getmail = {
          enable = true;
          mailboxes = ["ALL"];
          delete = false;
        };
        msmtp.enable = true;
      };
    };
  };
  home.file =
    lib.foldl' (a: b: a // b) {}
    (map (a: {"${renderConfigFilepath a}".text = renderAccountConfig a;})
      accounts);
}
